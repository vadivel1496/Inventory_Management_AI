services:
  backend:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://inventory_user:inventory_pass@postgres:5432/inventory_db
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=24h
      - CORS_ORIGIN=http://localhost:4200
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - inventory-network

  frontend:
    build: ./frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - inventory-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=inventory_db
      - POSTGRES_USER=inventory_user
      - POSTGRES_PASSWORD=inventory_pass
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U inventory_user -d inventory_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - inventory-network

  adminer:
    image: adminer:latest
    ports:
      - "8081:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - inventory-network

volumes:
  postgres_data:

networks:
  inventory-network:
    driver: bridge
